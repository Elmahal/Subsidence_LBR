 // Function to mask clouds using the Sentinel-2 QA band
function maskS2clouds(image) {
  var qa = image.select('QA60');
  // Bits 10 and 11 are clouds and cirrus, respectively.
  var cloudBitMask = 1 << 10;
  var cirrusBitMask = 1 << 11;
  // Both flags should be set to zero, indicating clear conditions.
  var mask = qa.bitwiseAnd(cloudBitMask).eq(0)
      .and(qa.bitwiseAnd(cirrusBitMask).eq(0));
  return image.updateMask(mask).divide(10000);
}

var EBR = ee.Geometry.Polygon([
  [
    [-91.833333, 30.75],  // Top Left Corner (Northwest)
    [-91.333333, 30.75],  // Top Right Corner (Northeast)
    [-91.333333, 30.333333],  // Bottom Right Corner (Southeast)
    [-91.833333, 30.333333]  // Bottom Left Corner (Southwest)
  ]
], null, false);

// Load the Sentinel-2 ImageCollection, filter, mask clouds, and clip to the ROI
var dataset = ee.ImageCollection('COPERNICUS/S2_SR_HARMONIZED')
                  .filterDate('2020-01-01', '2020-01-30')
                  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 20))
                  .map(maskS2clouds)
                  .map(function(image) { return image.clip(EBR); }); // Clip each image in the collection to WBR_Parish

// Visualization parameters
var visualization = {
  min: 0.0,
  max: 0.3,
  bands: ['B4', 'B3', 'B2'],
};

// Set map center and zoom level - using the approximate center of WBR_Parish
Map.setCenter(-91.34, 30.4, 12);
// Add the clipped image collection (mean composite) to the map
Map.addLayer(dataset.mean(), visualization, 'WBR_Parish');
//  EAST W=BR

//////////////////

 // Function to mask clouds using the Sentinel-2 QA band
function maskS2clouds(image) {
  var qa = image.select('QA60');
  // Bits 10 and 11 are clouds and cirrus, respectively.
  var cloudBitMask = 1 << 10;
  var cirrusBitMask = 1 << 11;
  // Both flags should be set to zero, indicating clear conditions.
  var mask = qa.bitwiseAnd(cloudBitMask).eq(0)
      .and(qa.bitwiseAnd(cirrusBitMask).eq(0));
  return image.updateMask(mask).divide(10000);
}

// Define the ROI using the provided corner coordinates
var WBR_Parish = ee.Geometry.Polygon([
  [
    [-91.5, 30.75], // Top Left Corner (Northwest)
    [-91.16666667, 30.75], // Top Right Corner (Northeast)
    [-91.16666667, 30.33333333], // Bottom Right Corner (Southeast)
    [-91.5, 30.33333333] // Bottom Left Corner (Southwest)
  ]
], null, false);


// Load the Sentinel-2 ImageCollection, filter, mask clouds, and clip to the ROI
var dataset = ee.ImageCollection('COPERNICUS/S2_SR_HARMONIZED')
                  .filterDate('2020-01-01', '2020-01-30')
                  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 20))
                  .map(maskS2clouds)
                  .map(function(image) { return image.clip(WBR_Parish); }); // Clip each image in the collection to WBR_Parish

// Visualization parameters
var visualization = {
  min: 0.0,
  max: 0.3,
  bands: ['B4', 'B3', 'B2'],
};
